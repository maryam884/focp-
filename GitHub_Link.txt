GitHub Repository: [https://github.com/maryam884/focp-.git]

README.md Overview:
1. Project Title: Maze Game Project
2. Group Members:
   - Armish Saleem
   - Maryam Asif
   - Munha Shahzad
   - Fatima Ahmad
3. Short Project Description:
   A maze game built using SFML where players navigate through challenging mazes, collect items, avoid traps, and beat timers to progress through levels.  The main goal is to excape from the maze.
4. Features:
   - Randomly generated mazes.
   - Timer and traps for added difficulty.
   - Increasing complexity with progression.
   - Collectibles to boost scores.
5. Technical Architecture:
   - Custom Modules: Input Handling, Game Logic, Maze Generation, Trap Logic, etc.
   - Third-Party Libraries: SFML for graphics, input, and audio.
6. How to Run and Deploy:
   - Clone the repository:
     `git clone [https://github.com/maryam884/focp-.git]`
   - Install SFML: Follow the instructions on [SFML's website](https://www.sfml-dev.org).
   - Compile the project using a C++ compiler with SFML configured.
   - Run the executable file to start the game.How to Run and Deploy the Maze Game
Clone the Repository
Open a terminal or command prompt.
Run the following command to clone the repository to your local machine:
git clone [repository-link]
Replace [repository-link] with the actual URL of your GitHub repository.
Install SFML Library
What is SFML?
SFML (Simple and Fast Multimedia Library) is a library used for graphics, audio, and input handling in C++ projects. It is required to run the game.
Steps to Install SFML:
a. Go to SFML's official website.
b. Download the version of SFML that matches your operating system and compiler (e.g., Windows, macOS, Linux).
c. Follow the platform-specific installation instructions provided on the SFML website:
On Windows: Install SFML by extracting the files and linking them to your compiler (e.g., Visual Studio, MinGW).
On macOS/Linux: Use package managers like brew, apt-get, or yum to install SFML.
Set Up Your Compiler
Make sure you have a C++ compiler installed (e.g., GCC, MinGW, or Visual Studio).
Configure your compiler to link SFML libraries properly:
Link SFML modules such as sfml-graphics, sfml-window, and sfml-audio.
Add SFML include paths to your compiler settings.
Compile the Project
Navigate to the directory where you cloned the repository.
Use your compiler to compile the source code:
If you're using a terminal, run:
g++ -o MazeGame main.cpp -lsfml-graphics -lsfml-window -lsfml-audio
Replace main.cpp with the name of your main source code file.
If you're using an IDE like Visual Studio or Code::Blocks, create a new project, add the source files, and configure SFML as a linked library.
Run the Game
After compilation, an executable file (e.g., MazeGame.exe on Windows) will be generated in the project directory.
Double-click the executable file, or run it from the terminal using:
./MazeGame
Deploy the Game
For Sharing with Others:
Share the executable file along with the necessary SFML dynamic libraries (DLLs on Windows).
Include all resource files (e.g., images, sounds) in the same directory as the executable.
For Cross-Platform Sharing:
Provide instructions for installing SFML and compiling the project on other platforms.
Include the source code and resource files in your GitHub repository.
Troubleshooting Tips
If the game doesn't compile, check for missing SFML libraries or incorrect paths in your compiler settings.
If SFML is not recognized, ensure the correct version is installed and linked.
Verify the game resources (images, sounds) are in the right location relative to the executable.







